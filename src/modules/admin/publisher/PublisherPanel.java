/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package modules.admin.publisher;

import data.models.Publisher;
import data.repository.PublisherRepository;
import helpers.AFDialog;
import java.util.ArrayList;
import java.util.HashMap;
import modules.shared.RegularDataTablePanel;
import modules.shared.RegularDataTablePanelInterface;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Azhar
 */
public class PublisherPanel extends javax.swing.JPanel implements RegularDataTablePanelInterface {

    ArrayList<Publisher> publishers;
    Publisher editedPublisher;
    RegularDataTablePanel regularDataTablePanel;
    PublisherRepository repository = new PublisherRepository();
    
    /**
     * Creates new form PublisherPanel
     */
    public PublisherPanel() {
        initComponents();
        
        regularDataTablePanel = new RegularDataTablePanel(this);
        
        String[] column = {"Name", "Image URL"};
        regularDataTablePanel.setupTableColumn(column);
        
        pnlDataTable.setLayout(new java.awt.BorderLayout());
        pnlDataTable.removeAll();
        pnlDataTable.add(regularDataTablePanel);
        pnlDataTable.validate();
        
        new Thread(regularDataTablePanel::populateData).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        textFieldName = new javax.swing.JTextField();
        textFieldImageURL = new javax.swing.JTextField();
        pnlDataTable = new javax.swing.JPanel();

        setBackground(new java.awt.Color(246, 241, 222));

        jPanel1.setBackground(new java.awt.Color(246, 241, 222));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setText("Publisher");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel2.setText("Name");

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel3.setText("Image URL");

        btnSave.setBackground(new java.awt.Color(138, 178, 166));
        btnSave.setFont(new java.awt.Font("Avenir Next", 1, 14)); // NOI18N
        btnSave.setForeground(new java.awt.Color(0, 0, 0));
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Avenir Next", 1, 14)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        textFieldName.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        textFieldImageURL.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3))
                            .addGap(218, 218, 218)))
                    .addComponent(textFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldImageURL, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(805, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldImageURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnClear))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pnlDataTable.setBackground(new java.awt.Color(246, 241, 222));

        javax.swing.GroupLayout pnlDataTableLayout = new javax.swing.GroupLayout(pnlDataTable);
        pnlDataTable.setLayout(pnlDataTableLayout);
        pnlDataTableLayout.setHorizontalGroup(
            pnlDataTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlDataTableLayout.setVerticalGroup(
            pnlDataTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 364, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(pnlDataTable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDataTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        setDataForm(null);
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String name = textFieldName.getText();
        String imageURL = textFieldImageURL.getText();
        
        // Fields validation
        if (name.isEmpty()) {
            AFDialog.showError(this, "Please fill the name field.");
            return;
        } else if (imageURL.isEmpty()) {
            AFDialog.showError(this, "Please fill the image field.");
            return;
        }
        
        // The form is valid, continue to insert process
        if (editedPublisher != null) {
            saveData(false, editedPublisher.id, name, imageURL);
        } else {
            saveData(true, 0, name, imageURL);
        }
        regularDataTablePanel.populateData();
    }//GEN-LAST:event_btnSaveActionPerformed
  
    public void setDataForm(Publisher publisher) {
        this.editedPublisher = publisher;
        if (publisher != null) {
            textFieldName.setText(publisher.name);
            textFieldImageURL.setText(publisher.imageURL);
        } else {
            clearForm();
        }
    }
    
    private void saveData(boolean isNewData, int id, String name, String imageURL) {
        Publisher publisher = new Publisher(id, name, imageURL);
        try {
            if (isNewData) {
                repository.save(publisher);
                AFDialog.showMessage(this, "Publisher saved successfully.");
            } else {
                repository.update(publisher);
                AFDialog.showMessage(this, "Publisher updated successfully.");
            }
            setDataForm(null);
        } catch (Exception e) {
            AFDialog.showError(this, e.getLocalizedMessage());
        }
    }
    
    private void clearForm() {
        textFieldName.setText("");
        textFieldImageURL.setText("");
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel pnlDataTable;
    private javax.swing.JTextField textFieldImageURL;
    private javax.swing.JTextField textFieldName;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onEditClicked(int row) {
        setDataForm(publishers.get(row));
    }

    @Override
    public ArrayList<Object[]> provideData(String query) {
        publishers = new ArrayList<>();
        publishers = repository.populate(query);
        
        ArrayList<Object[]> data = new ArrayList<>();
        for(Publisher obj : publishers) {
            data.add(new Object[] {obj.name, obj.imageURL});
        }
        return data;
    }

    @Override
    public void onDeleteClicked(int row) {
        String id = String.valueOf(publishers.get(row).id);
        
        try {
            repository.delete(id);
            regularDataTablePanel.populateData();
        } catch (Exception ex) {
            AFDialog.showError(this, ex.getLocalizedMessage());
        }
    }

    @Override
    public void onPrintClicked() {
        try {
            String path = "src/modules/admin/publisher/PublisherReport.jasper";
            HashMap params = new HashMap();
            JasperPrint print = JasperFillManager.fillReport(path, params, repository.connection);
            JasperViewer.viewReport(print, false);
        } catch (Exception ex) {
            AFDialog.showError(this, ex.getLocalizedMessage());
        }
    }
}
