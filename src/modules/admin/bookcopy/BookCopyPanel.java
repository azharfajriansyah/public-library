/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package modules.admin.bookcopy;

import com.github.lgooddatepicker.zinternaltools.Pair;
import data.models.Book;
import data.models.BookCopy;
import data.repository.BookCopyRepository;
import data.repository.BookRepository;
import helpers.AFDialog;
import java.awt.Image;
import java.net.URL;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.SwingConstants;
import modules.shared.DataSelectorFrame;
import modules.shared.DataSelectorFrameInterface;
import modules.shared.RegularDataTablePanel;
import modules.shared.RegularDataTablePanelInterface;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Azhar
 */
public class BookCopyPanel extends javax.swing.JPanel implements RegularDataTablePanelInterface, DataSelectorFrameInterface<Book> {

    Book selectedBook;
    ArrayList<BookCopy> bookCopies;
    BookCopy editedBookCopy;
    RegularDataTablePanel regularDataTablePanel;
    BookCopyRepository repository = new BookCopyRepository();
    
    /**
     * Creates new form BookCopyPanel
     */
    public BookCopyPanel() {
        initComponents();
        
        regularDataTablePanel = new RegularDataTablePanel(this);
        
        String[] column = {"Title", "Copy ID", "Status"};
        regularDataTablePanel.setupTableColumn(column);
        
        pnlDataTable.setLayout(new java.awt.BorderLayout());
        pnlDataTable.removeAll();
        pnlDataTable.add(regularDataTablePanel);
        pnlDataTable.validate();
        
        new Thread(regularDataTablePanel::populateData).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlDataTable = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        textFieldBookTitle = new javax.swing.JTextField();
        btnSelectBook = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        textFieldNumberOfCopy = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        labelBookTitle = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        comboBoxCopyStatus = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();
        labelImage = new javax.swing.JLabel();

        setBackground(new java.awt.Color(246, 241, 222));

        pnlDataTable.setBackground(new java.awt.Color(246, 241, 222));

        javax.swing.GroupLayout pnlDataTableLayout = new javax.swing.GroupLayout(pnlDataTable);
        pnlDataTable.setLayout(pnlDataTableLayout);
        pnlDataTableLayout.setHorizontalGroup(
            pnlDataTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlDataTableLayout.setVerticalGroup(
            pnlDataTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 341, Short.MAX_VALUE)
        );

        jPanel1.setBackground(new java.awt.Color(246, 241, 222));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setText("Book Copy");

        jPanel2.setBackground(new java.awt.Color(246, 241, 222));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Add Book Copy"));

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel8.setText("Book Title");

        textFieldBookTitle.setEditable(false);
        textFieldBookTitle.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        btnSelectBook.setText("...");
        btnSelectBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectBookActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel9.setText("Number of Copy");

        textFieldNumberOfCopy.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        btnAdd.setBackground(new java.awt.Color(138, 178, 166));
        btnAdd.setFont(new java.awt.Font("Avenir Next", 1, 14)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(0, 0, 0));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textFieldNumberOfCopy)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(textFieldBookTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSelectBook))
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 226, Short.MAX_VALUE)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldBookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelectBook))
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldNumberOfCopy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAdd)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(246, 241, 222));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Edit Book Copy"));

        labelBookTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        labelBookTitle.setText("Book Title");

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel10.setText("Status");

        comboBoxCopyStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "On Loan", "Lost" }));

        btnSave.setBackground(new java.awt.Color(138, 178, 166));
        btnSave.setFont(new java.awt.Font("Avenir Next", 1, 14)); // NOI18N
        btnSave.setForeground(new java.awt.Color(0, 0, 0));
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        labelImage.setMaximumSize(new java.awt.Dimension(100, 150));
        labelImage.setMinimumSize(new java.awt.Dimension(100, 150));
        labelImage.setPreferredSize(new java.awt.Dimension(100, 150));
        labelImage.setSize(new java.awt.Dimension(100, 150));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(labelBookTitle)
                    .addComponent(comboBoxCopyStatus, 0, 357, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(labelBookTitle)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxCopyStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(labelImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(btnSave)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlDataTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDataTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectBookActionPerformed
        DataSelectorFrame frame = new DataSelectorFrame(this);
        frame.setTitle("Select Book");
        String[] column = {"Title", "Author"};
        frame.setupTableColumn(column);
        
        frame.setVisible(true);
        frame.populateData();
    }//GEN-LAST:event_btnSelectBookActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (selectedBook != null) {
            if (textFieldNumberOfCopy.getText().isBlank()) {
                AFDialog.showError(this, "Please input the number of copy");
                return;
            }
            int numberOfCopy = Integer.parseInt(textFieldNumberOfCopy.getText());
            
            for (int i=0; i<numberOfCopy; i++) {
                try {
                    repository.save(new BookCopy(0, "Available", selectedBook));
                    AFDialog.showMessage(this, "Book copy saved successfully.");
                } catch (Exception ex) {
                    AFDialog.showError(this, ex.getLocalizedMessage());
                }
            }
            selectedBook = null;
            textFieldBookTitle.setText("");
            textFieldNumberOfCopy.setText("");
        } else {
            AFDialog.showError(this, "Please select the book first");
        }
        regularDataTablePanel.populateData();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (editedBookCopy.status.equalsIgnoreCase("On Loan")) {
            AFDialog.showError(this, "Could not edit book that is still on loan");
            return;
        }
        try {
            repository.update(new BookCopy(editedBookCopy.id, comboBoxCopyStatus.getSelectedItem().toString(), null));
            AFDialog.showMessage(this, "Book copy updated successfully.");
        } catch (Exception ex) {
            AFDialog.showError(this, ex.getLocalizedMessage());
        }
        regularDataTablePanel.populateData();
    }//GEN-LAST:event_btnSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSelectBook;
    private javax.swing.JComboBox<String> comboBoxCopyStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel labelBookTitle;
    private javax.swing.JLabel labelImage;
    private javax.swing.JPanel pnlDataTable;
    private javax.swing.JTextField textFieldBookTitle;
    private javax.swing.JTextField textFieldNumberOfCopy;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onEditClicked(int row) {
        editedBookCopy = bookCopies.get(row);
        
        labelBookTitle.setText(editedBookCopy.book.title + " [Copy ID: " + editedBookCopy.id + "]");
        comboBoxCopyStatus.setSelectedIndex(Arrays.asList("Available", "On Loan", "Lost").indexOf(editedBookCopy.status));
        
        try {
            // URL gambar yang ingin ditampilkan
            URL imageUrl = new URL(editedBookCopy.book.coverImageURL);

            // Membuat ImageIcon dari URL
            ImageIcon imageIcon = new ImageIcon(imageUrl);
            Image image = imageIcon.getImage();
            Image resizedImage = image.getScaledInstance(100, 150, Image.SCALE_SMOOTH);
            ImageIcon resizedIcon = new ImageIcon(resizedImage);

            // Membuat JLabel dan menambahkan ImageIcon
            labelImage.setIcon(resizedIcon);

        } catch (Exception e) {
            // Jika terjadi error, tampilkan pesan error di JLabel
            JLabel errorLabel = new JLabel("Gagal memuat gambar: " + e.getMessage());
            errorLabel.setHorizontalAlignment(SwingConstants.CENTER);
            add(errorLabel);
        }
        
    }

    @Override
    public void onDeleteClicked(int row) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void onPrintClicked() {
        try {
            String path = "src/modules/admin/bookcopy/BookCopyReport.jasper";
            HashMap params = new HashMap();
            JasperPrint print = JasperFillManager.fillReport(path, params, repository.connection);
            JasperViewer.viewReport(print, false);
        } catch (Exception ex) {
            AFDialog.showError(this, ex.getLocalizedMessage());
        }
    }

    @Override
    public ArrayList<Object[]> provideData(String query) {
        bookCopies = new ArrayList<>();
        bookCopies = repository.populate(query);
        
        ArrayList<Object[]> data = new ArrayList<>();
        for(BookCopy obj : bookCopies) {
            data.add(new Object[] {obj.book.title, obj.id, obj.status});
        }
        return data;
    }

    @Override
    public Pair<ArrayList<Book>, ArrayList<Object[]>> dataSelectorProvideData(String query) {
        BookRepository _repository = new BookRepository();
        ArrayList<Book> books = _repository.populate(query);

        Pair<ArrayList<Book>, ArrayList<Object[]>> data = new Pair<>(new ArrayList<>(), new ArrayList<>());
        data.first = books;
        for(Book obj : books) {
            data.second.add(new Object[] {obj.title, obj.author.firstName + " " + obj.author.lastName});
        }
        return data;
    }

    @Override
    public void dataSelectorOnDataSelected(Book data) {
        selectedBook = data;
        textFieldBookTitle.setText(selectedBook.title);
    }
}
