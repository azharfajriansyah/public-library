/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package modules.admin.author;

import data.models.Author;
import data.repository.AuthorRepository;
import helpers.AFDialog;
import java.util.ArrayList;
import java.util.HashMap;
import modules.shared.RegularDataTablePanel;
import modules.shared.RegularDataTablePanelInterface;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author fdn-azhar
 */
public class AuthorPanel extends javax.swing.JPanel implements AuthorFormPanelInterface, RegularDataTablePanelInterface {

    /**
     * Creates new form AuthorPanel
     */
    
    ArrayList<Author> authors;
    AuthorFormPanel formPanel = new AuthorFormPanel(this);
    RegularDataTablePanel regularDataTablePanel = new RegularDataTablePanel(this);
    AuthorRepository repository = new AuthorRepository();
            
    public AuthorPanel() {
        initComponents();
        
        pnlAddForm.setLayout(new java.awt.BorderLayout());
        pnlAddForm.removeAll();
        pnlAddForm.add(formPanel);
        pnlAddForm.validate();
        
        String[] column = {"First Name", "Last Name", "DOB", "Nationality"};
        regularDataTablePanel.setupTableColumn(column);
        
        pnlDataTable.setLayout(new java.awt.BorderLayout());
        pnlDataTable.removeAll();
        pnlDataTable.add(regularDataTablePanel);
        pnlDataTable.validate();
        
        new Thread(regularDataTablePanel::populateData).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlAddForm = new javax.swing.JPanel();
        pnlDataTable = new javax.swing.JPanel();

        setBackground(new java.awt.Color(246, 241, 222));

        pnlAddForm.setBackground(new java.awt.Color(246, 241, 222));

        javax.swing.GroupLayout pnlAddFormLayout = new javax.swing.GroupLayout(pnlAddForm);
        pnlAddForm.setLayout(pnlAddFormLayout);
        pnlAddFormLayout.setHorizontalGroup(
            pnlAddFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 914, Short.MAX_VALUE)
        );
        pnlAddFormLayout.setVerticalGroup(
            pnlAddFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 204, Short.MAX_VALUE)
        );

        pnlDataTable.setBackground(new java.awt.Color(246, 241, 222));

        javax.swing.GroupLayout pnlDataTableLayout = new javax.swing.GroupLayout(pnlDataTable);
        pnlDataTable.setLayout(pnlDataTableLayout);
        pnlDataTableLayout.setHorizontalGroup(
            pnlDataTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlDataTableLayout.setVerticalGroup(
            pnlDataTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 372, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlAddForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(pnlDataTable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlAddForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDataTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel pnlAddForm;
    private javax.swing.JPanel pnlDataTable;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onDataSaved() {
        regularDataTablePanel.populateData();
    }

    @Override
    public void onEditClicked(int row) {
        formPanel.setData(authors.get(row));
    }

    @Override
    public ArrayList<Object[]> provideData(String query) {
        authors = new ArrayList<>();
        authors = repository.populate(query);
        
        ArrayList<Object[]> data = new ArrayList<>();
        for(Author obj : authors) {
            data.add(new Object[] {obj.firstName, obj.lastName, obj.dob, obj.nationality});
        }
        return data;
    }

    @Override
    public void onDeleteClicked(int row) {
        String id = String.valueOf(authors.get(row).id);
        try {
            repository.delete(id);
            regularDataTablePanel.populateData();
        } catch (Exception ex) {
            AFDialog.showError(this, ex.getLocalizedMessage());
        }
    }

    @Override
    public void onPrintClicked() {
        try {
            String path = "src/modules/admin/author/AuthorReport.jasper";
            HashMap params = new HashMap();
            JasperPrint print = JasperFillManager.fillReport(path, params, repository.connection);
            JasperViewer.viewReport(print, false);
        } catch (Exception ex) {
            AFDialog.showError(this, ex.getLocalizedMessage());
        }
    }
}
