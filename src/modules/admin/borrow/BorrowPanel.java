/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package modules.admin.borrow;

import com.github.lgooddatepicker.components.DatePicker;
import com.github.lgooddatepicker.zinternaltools.Pair;
import data.models.BookCopy;
import data.models.Loan;
import data.models.Member;
import data.repository.BookCopyRepository;
import data.repository.LoanRepository;
import data.repository.MemberRepository;
import helpers.AFDialog;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import modules.shared.DataSelectorFrame;
import modules.shared.DataSelectorFrameInterface;

/**
 *
 * @author Azhar
 */
public class BorrowPanel extends javax.swing.JPanel implements DataSelectorFrameInterface<Member> {
    
    DatePicker borrowDatePicker;
    DatePicker dueDatePicker;
    
    BookCopyRepository bookCopyRepository = new BookCopyRepository();
    ArrayList<BookCopy> bookCopyList;
    
    ArrayList<BookCopy> borrowedBooks = new ArrayList<>();
    
    MemberRepository memberRepository = new MemberRepository();
    ArrayList<Member> members;
    Member selectedMember;
    
    LoanRepository loanRepository = new LoanRepository();

    /**
     * Creates new form BorrowPanel
     */
    public BorrowPanel() {
        initComponents();
        
        borrowDatePicker = new DatePicker();
        pnlBorrowDate.setLayout(new java.awt.BorderLayout());
        pnlBorrowDate.removeAll();
        pnlBorrowDate.add(borrowDatePicker);
        pnlBorrowDate.validate();
        
        dueDatePicker = new DatePicker();
        pnlDueDate.setLayout(new java.awt.BorderLayout());
        pnlDueDate.removeAll();
        pnlDueDate.add(dueDatePicker);
        pnlDueDate.validate();
        
        validate();
        
        new Thread(this::populateBooksData).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        pnlBookListAvailable = new javax.swing.JPanel();
        textFieldSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnSelect = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBookList = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        textFieldMember = new javax.swing.JTextField();
        btnSelectMember = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        pnlBorrowDate = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        pnlDueDate = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBorrowedBooks = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();

        setBackground(new java.awt.Color(246, 241, 222));
        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setText("Borrow Book");

        pnlBookListAvailable.setBackground(new java.awt.Color(246, 241, 222));
        pnlBookListAvailable.setBorder(javax.swing.BorderFactory.createTitledBorder("Available Book List"));

        textFieldSearch.setToolTipText("Search");
        textFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textFieldSearchKeyPressed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Avenir Next", 1, 14)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnSelect.setBackground(new java.awt.Color(138, 178, 166));
        btnSelect.setFont(new java.awt.Font("Avenir Next", 1, 14)); // NOI18N
        btnSelect.setForeground(new java.awt.Color(0, 0, 0));
        btnSelect.setText("Select");
        btnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });

        tblBookList.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        tblBookList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Book Title", "Copy ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblBookList);
        if (tblBookList.getColumnModel().getColumnCount() > 0) {
            tblBookList.getColumnModel().getColumn(0).setPreferredWidth(10);
            tblBookList.getColumnModel().getColumn(1).setPreferredWidth(60);
            tblBookList.getColumnModel().getColumn(2).setPreferredWidth(20);
        }

        javax.swing.GroupLayout pnlBookListAvailableLayout = new javax.swing.GroupLayout(pnlBookListAvailable);
        pnlBookListAvailable.setLayout(pnlBookListAvailableLayout);
        pnlBookListAvailableLayout.setHorizontalGroup(
            pnlBookListAvailableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBookListAvailableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBookListAvailableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textFieldSearch)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBookListAvailableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBookListAvailableLayout.createSequentialGroup()
                        .addComponent(btnSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        pnlBookListAvailableLayout.setVerticalGroup(
            pnlBookListAvailableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBookListAvailableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBookListAvailableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBookListAvailableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBookListAvailableLayout.createSequentialGroup()
                        .addComponent(btnSelect)
                        .addGap(343, 620, Short.MAX_VALUE))
                    .addGroup(pnlBookListAvailableLayout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())))
        );

        jPanel1.setBackground(new java.awt.Color(246, 241, 222));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Borrow Form"));

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel3.setText("Book List");

        textFieldMember.setEditable(false);
        textFieldMember.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        btnSelectMember.setText("...");
        btnSelectMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectMemberActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel6.setText("Borrow Date");

        pnlBorrowDate.setBackground(new java.awt.Color(246, 241, 222));
        pnlBorrowDate.setPreferredSize(new java.awt.Dimension(300, 26));
        pnlBorrowDate.setSize(new java.awt.Dimension(300, 26));

        javax.swing.GroupLayout pnlBorrowDateLayout = new javax.swing.GroupLayout(pnlBorrowDate);
        pnlBorrowDate.setLayout(pnlBorrowDateLayout);
        pnlBorrowDateLayout.setHorizontalGroup(
            pnlBorrowDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlBorrowDateLayout.setVerticalGroup(
            pnlBorrowDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel7.setText("Return Date");

        pnlDueDate.setBackground(new java.awt.Color(246, 241, 222));
        pnlDueDate.setMinimumSize(new java.awt.Dimension(300, 26));
        pnlDueDate.setPreferredSize(new java.awt.Dimension(300, 26));
        pnlDueDate.setSize(new java.awt.Dimension(300, 26));

        javax.swing.GroupLayout pnlDueDateLayout = new javax.swing.GroupLayout(pnlDueDate);
        pnlDueDate.setLayout(pnlDueDateLayout);
        pnlDueDateLayout.setHorizontalGroup(
            pnlDueDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlDueDateLayout.setVerticalGroup(
            pnlDueDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        tblBorrowedBooks.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        tblBorrowedBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Book Title", "Copy ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblBorrowedBooks);
        if (tblBorrowedBooks.getColumnModel().getColumnCount() > 0) {
            tblBorrowedBooks.getColumnModel().getColumn(0).setResizable(false);
            tblBorrowedBooks.getColumnModel().getColumn(1).setResizable(false);
            tblBorrowedBooks.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel4.setText("Member");

        btnDelete.setBackground(new java.awt.Color(255, 102, 102));
        btnDelete.setFont(new java.awt.Font("Avenir Next", 1, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(0, 0, 0));
        btnDelete.setText("Delete");
        btnDelete.setMaximumSize(new java.awt.Dimension(100, 30));
        btnDelete.setMinimumSize(new java.awt.Dimension(100, 30));
        btnDelete.setPreferredSize(new java.awt.Dimension(100, 30));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(138, 178, 166));
        btnSave.setFont(new java.awt.Font("Avenir Next", 1, 14)); // NOI18N
        btnSave.setForeground(new java.awt.Color(0, 0, 0));
        btnSave.setText("Submit");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlBorrowDate, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(textFieldMember)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSelectMember))
                            .addComponent(btnSave, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(pnlDueDate, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldMember, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelectMember))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlBorrowDate, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSave))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlBookListAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBookListAvailable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectMemberActionPerformed
        showMemberSelector();
    }//GEN-LAST:event_btnSelectMemberActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int row = tblBorrowedBooks.getSelectedRow();
        borrowedBooks.remove(row);
        populateBorrowedBooksData();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void textFieldSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldSearchKeyPressed
        if (evt.getKeyCode() == 10) {
            btnSearchActionPerformed(null);
        }
    }//GEN-LAST:event_textFieldSearchKeyPressed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        populateBooksData();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
        int row = tblBookList.getSelectedRow();
        BookCopy selectedCopy = bookCopyList.get(row);
        if (borrowedBooks.indexOf(selectedCopy) == -1) {
            borrowedBooks.add(bookCopyList.get(row));
            populateBorrowedBooksData();
        }
    }//GEN-LAST:event_btnSelectActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (selectedMember == null) {
            AFDialog.showError(this, "Please select member");
            return;
        } else if (borrowDatePicker.getText().isBlank()) {
            AFDialog.showError(this, "Please input borrow date");
            return;
        } else if (dueDatePicker.getText().isBlank()) {
            AFDialog.showError(this, "Please input return date");
            return;
        } else if (borrowedBooks.isEmpty()) {
            AFDialog.showError(this, "Please input borrowed book(s)");
            return;
        }
        
        for(BookCopy copy : borrowedBooks) {
            try {
                loanRepository.save(new Loan(0, copy.id, selectedMember.id, borrowDatePicker.getDateStringOrEmptyString(), dueDatePicker.getDateStringOrEmptyString(), "", "On Loan"));
            } catch (Exception ex) {
                AFDialog.showError(this, ex.getLocalizedMessage());
                return;
            }
        }
        AFDialog.showMessage(this, "Data saved successfully.");
        
        borrowedBooks.clear();
        selectedMember = null;
        textFieldMember.setText("");
        borrowDatePicker.setText("");
        dueDatePicker.setText("");
        ((DefaultTableModel) tblBorrowedBooks.getModel()).setRowCount(0);
        
        populateBooksData();
        populateBorrowedBooksData();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void populateBooksData() {
        bookCopyList = new ArrayList<>();
        bookCopyList = bookCopyRepository.populateAvailable(textFieldSearch.getText());
        
        DefaultTableModel model = (DefaultTableModel) tblBookList.getModel();
        model.setRowCount(0);
        
        for (int i=0; i<bookCopyList.size(); i++) {
            BookCopy copy = bookCopyList.get(i);
            model.addRow(new Object[] {i+1, copy.book.title, copy.id});
        }
    }
    
    private void populateBorrowedBooksData() {
        DefaultTableModel model = (DefaultTableModel) tblBorrowedBooks.getModel();
        model.setRowCount(0);
        
        for (int i=0; i<borrowedBooks.size(); i++) {
            BookCopy copy = borrowedBooks.get(i);
            model.addRow(new Object[] {i+1, copy.book.title, copy.id});
        }
    }
    
    private void showMemberSelector() {
        DataSelectorFrame frame = new DataSelectorFrame(this);
        frame.setTitle("Select Member");
        String[] column = {"Name", "Email", "Phone Number"};
        frame.setupTableColumn(column);
        
        frame.setVisible(true);
        frame.populateData();
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSelect;
    private javax.swing.JButton btnSelectMember;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pnlBookListAvailable;
    private javax.swing.JPanel pnlBorrowDate;
    private javax.swing.JPanel pnlDueDate;
    private javax.swing.JTable tblBookList;
    private javax.swing.JTable tblBorrowedBooks;
    private javax.swing.JTextField textFieldMember;
    private javax.swing.JTextField textFieldSearch;
    // End of variables declaration//GEN-END:variables

    @Override
    public void dataSelectorOnDataSelected(Member data) {
        selectedMember = data;
        textFieldMember.setText(selectedMember.firstName + " " + selectedMember.lastName);
    }

    @Override
    public Pair<ArrayList<Member>, ArrayList<Object[]>> dataSelectorProvideData(String query) {
        members = new ArrayList<>();
        members = memberRepository.populate(query);
        
        Pair<ArrayList<Member>, ArrayList<Object[]>> data = new Pair<>(new ArrayList<>(), new ArrayList<>());
        data.first = members;
        
        for(Member obj : members) {
            data.second.add(new Object[] {obj.firstName + " " + obj.lastName, obj.email, obj.phoneNumber});
        }
        return data;
    }
}
